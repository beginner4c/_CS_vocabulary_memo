namespace의 역할
 - 식별자(identifier)가 영향을 미치는 범위 지정
 - 대규모의 과제 수행 시 식별자가 중복되는 현상을 관리
 - 주소와 비슷한 용도 (ex : 부산시 동래구 사직동 or 서울시 종로구 사직동)
	<name_space> <class-name> <function-name>


class

command line argumnet : static void Main(string[] args){ } 의 args 같은 거

static function : C언어와 다르게 class 내부에 선언해주어야 함

member function

function overloading : C#이나 JAVA에서는 한 번 사용한 함수 이름을 type 지정 등을 달리해 다시 사용이 가능하다

visibility(가시성) : public, private 같은 제도

built-in type 변수 특징
정수형 변수(integer variable)
 - 의미 : 정수를 저장하는 기억장소
 - 목적 : 셀 수 있는 숫자 저장
    학생 수 , 지갑의 돈, 자동차 수
    소수점 없음
 - 상수 : 123, 0x7f12, 0755
 - 크기 : 4 bytes(확정)
 - 표현 양식 : 양수 경우 / 음수 경우
 - 연산자 : + - * /  [% (modulo operator)]
 - 주의 사항 : overflow / truncation(소숫점 이하 잘림 현상)
 - short(ushort) : 2 bytes
 - long(ulong) : 8 bytes

문자형 변수(character variable)
 - 2 bytes unicode
 * C의 경우 1 byte의 ASCII 였다

실수형 변수(floating number variable)
 - float : 4 bytes (사용하지 말자)
 - double : 8 bytes (주로 사용)
 - decimal : 16 bytes (소수점 28~29자리로 엄청 크다)

불린 변수(bool variable)
 - 상수 : true/false -> 참 거짓 표현 시 사용
 - 비교문 type checking 강화

[잡다한 변화]
매크로 정의 -> 정적 데이터 멤버
변수 정의 순서(필요한 위치에 마음대로 가능)
함수 이름 중복(function overloading)
한글 변수명 사용 가능
is 연산자를 이용한 type checking
as 연산자를 이용한 type casting (built-in보다 reference class casting 시 사용)
format 문의 대용 : {0} {1} {2} ... ("%d %s", x, y 의 대용)
