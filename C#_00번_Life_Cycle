소프트웨어 생명 주기 Life Cycle
 - 요구 분석, 시스템 명세, 설계, 구현, 테스트, 유지 보수의 6단계

시스템 설계 방법
 1. 하향식 설계 Top-Down Design
  - C에서 사용하는 방법으로 분할 정복 Divide and Conquer 라고 한다
 2. 상향식 설계 Bottom-Up Design
 3. 객체지향 설계 Object-Oriented Design

구현 방법
 1. 구조화 프로그래밍
  - 지정문, 조건문, 반복문만 사용해 프로그램을 작성 
  - 순차 구조, 선택 구조, 반복 구조의 3가지 제어 구조
  - 구조가 간단 명확해 검증, 테스트, 유지 보수가 쉬운 장점
 2. 모듈러 프로그래밍
  - 구조화 프로그래밍 기법으로 작성해 하나의 기능만 수행하는 모듈들을 조합해 프로그래밍
  - 모듈별로 개발, 테스트, 유지 보수가 가능할 뿐 아니라 재사용도 가능하다

테스트 단계
 1. 단위 테스트
 2. 통합 테스트
  - 하향식 테스트, 상향식 테스트
 3. 인수 테스트

유지보수 유형
 - 수정형, 적응형, 완전형, 예방형

